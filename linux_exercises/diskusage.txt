*********************************************
Generated on Tue May  6 09:59:11 AM CEST 2025
by hannah-montana
*********************************************
!!! REPORT NOT GENERATED BY ROOT !!!
!!!     ERRORS MAY BE PRESENT    !!!
 
#####################
# SYSTEM DISK USAGE #
#####################
----------------------------------------
Filesystem                  Size Use%
tmpfs                       332M   1%
/dev/sda2                   124G  10%
tmpfs                       1.7G   2%
efivarfs                    128M   1%
tmpfs                       5.0M   0%
tmpfs                       1.0M   0%
tmpfs                       1.0M   0%
/dev/sda1                   1.1G   1%
tmpfs                       1.7G   1%
tmpfs                       332M   2%
/dev/mapper/lvm--raid-lvm0  2.0G   1%
----------------------------------------
 
###################
# USER DISK USAGE #
###################
----------------------------------------
848M	/home/hannah-montana
du: cannot read directory '/home/jackson': Permission denied
4.0K	/home/jackson
----------------------------------------
 
*********************************************
Generated on Tue May  6 09:59:18 AM CEST 2025
by root
*********************************************
 
#####################
# SYSTEM DISK USAGE #
#####################
----------------------------------------
Filesystem                  Size Use%
tmpfs                       332M   1%
/dev/sda2                   124G  10%
tmpfs                       1.7G   2%
efivarfs                    128M   1%
tmpfs                       5.0M   0%
tmpfs                       1.0M   0%
tmpfs                       1.0M   0%
/dev/sda1                   1.1G   1%
tmpfs                       1.7G   1%
tmpfs                       332M   2%
/dev/mapper/lvm--raid-lvm0  2.0G   1%
----------------------------------------
 
###################
# USER DISK USAGE #
###################
----------------------------------------
848M	/home/hannah-montana
608M	/home/jackson
----------------------------------------
 
#!/bin/bash

clear # clear screen

# DEFINE FUNCTIONS

print_header () {
    echo "     _ _     _                                     _     "
    echo "  __| (_)___| | ___   _ ___  __ _  __ _  ___   ___| |__  "
    echo " / _\` | / __| |/ / | | / __|/ _\` |/ _\` |/ _ \ / __| '_ \ "
    echo "| (_| | \__ \   <| |_| \__ \ (_| | (_| |  __/_\__ \ | | |"
    echo " \__,_|_|___/_|\_\\\__,_|___/\__,_|\__, |\___(_)___/_| |_|"
    echo "                                  |___/                  "
    echo "                                                         "
}

print_footer () {
    echo " "
    echo "output saved to diskusage.txt"
}

# PRE-RUN ROOT CHECK

# Check if the script is run as root
if [ "$EUID" -ne 0 ]; then
    print_header # Print the script header
    echo "##############################################################################"
    echo "# ! This script will show incorrect disk usage by users if not run as root ! #"
    echo "# !                     Please run as root or use sudo                     ! #"
    echo "##############################################################################"
    echo " "
    echo "Do you want to run it anyway, with potentially incorrect output? (y/N)"
    echo " "
    read -r answer
    if [[ "$answer" =~ ^[Yy]$ ]]; then
        clear # clear screen and redraw header and everything for a clean look
        print_header # Print the script header
        echo "##############################################################################"
        echo "# ! This script will show incorrect disk usage by users if not run as root ! #"
        echo "# !                     Please run as root or use sudo                     ! #"
        echo "##############################################################################"
        echo " "
        echo "Running anyway..."
        sleep 1
    else
        clear
        exit 1
    fi
fi

# END OF PRE-RUN ROOT CHECK

clear # clear screen

# FILE PERMISSIONS CHECK

# check if diskusage.txt exists
if [ -f diskusage.txt ]; then
    # check if diskusage.txt is writable
    if [ ! -w diskusage.txt ]; then
        print_header # Print the script header
        echo "###########################################################"
        echo "# !           \"diskusage.txt\" NOT WRITABLE              ! #"
        echo "# !              PLEASE CHECK PERMISSIONS               ! #"
        echo "###########################################################"
        echo " "
        echo "Script is exiting."
        sleep 5
        clear
        exit 1
    fi
fi

clear # clear screen

# FILE HANDLING CHECK

# check if diskusage.txt exists
if [ -f diskusage.txt ]; then
    print_header # Print the script header
    echo "###########################################################"
    echo "# !           \"diskusage.txt\" ALREADY EXISTS            ! #"
    echo "# ! (NOT REPLACING WILL APPEND OUTPUT TO EXISTING FILE) ! #"
    echo "###########################################################"
    echo " "
    echo "Do you want to replace the existing file? (y/N)"
    echo " "
    read -r answer
    if [[ "$answer" =~ ^[Yy]$ ]]; then
        clear # clear screen and redraw header and everything for a clean look
        print_header # Print the script header
        echo "###########################################################"
        echo "# !           \"diskusage.txt\" ALREADY EXISTS            ! #"
        echo "# ! (NOT REPLACING WILL APPEND OUTPUT TO EXISTING FILE) ! #"
        echo "###########################################################"
        echo " "
        echo "diskusage.txt deleted"
        rm diskusage.txt
        sleep 1
    else
        clear # clear screen and redraw header and everything for a clean look
        print_header # Print the script header
        echo "###########################################################"
        echo "# !           \"diskusage.txt\" ALREADY EXISTS            ! #"
        echo "# ! (NOT REPLACING WILL APPEND OUTPUT TO EXISTING FILE) ! #"
        echo "###########################################################"
        echo " "
        echo "Appending to existing file..."
        sleep 1
    fi
fi

# END OF FILE HANDLING CHECK

clear   # clear screen

# RUN SCRIPT

# print date and time to output file only
echo "*********************************************" >> diskusage.txt
echo "Generated on $(date)" >> diskusage.txt
echo "by $USER" >> diskusage.txt
echo "*********************************************" >> diskusage.txt
if [ "$EUID" -ne 0 ]; then
    echo "!!! REPORT NOT GENERATED BY ROOT !!!" >> diskusage.txt
    echo "!!!     ERRORS MAY BE PRESENT    !!!" >> diskusage.txt
fi
echo " " >> diskusage.txt

# print header to console only
print_header # Print the script header

# print output to both console and file
echo "#####################" | tee -a diskusage.txt
echo "# SYSTEM DISK USAGE #" | tee -a diskusage.txt
echo "#####################" | tee -a diskusage.txt
echo "----------------------------------------" | tee -a diskusage.txt
df -h --output=source,size,pcent | tee -a diskusage.txt
echo "----------------------------------------" | tee -a diskusage.txt
echo " " | tee -a diskusage.txt
echo "###################" | tee -a diskusage.txt
echo "# USER DISK USAGE #" | tee -a diskusage.txt
echo "###################" | tee -a diskusage.txt
echo "----------------------------------------" | tee -a diskusage.txt
if [ "$EUID" -ne 0 ]; then
    du -hs /home/* 2>&1 | tee -a diskusage.txt
    else
    sudo du -hs /home/* | tee -a diskusage.txt
fi
echo "----------------------------------------" | tee -a diskusage.txt

# Print final empty line to file only
echo " " >> diskusage.txt

# print footer to console only
print_footer

# If run as sudo, set output file permissions to be owned by the user that ran the script (not the root user)
if [ "$EUID" -ne 0 ]; then
    chown "$SUDO_USER":"$(id -gn $SUDO_USER)" diskusage.txt
fi
